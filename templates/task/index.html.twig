{% extends 'base.html.twig' %}
{# This template extends the base layout. #}

{% block title %}Task index{% endblock %}
{# Sets the page title to "Task index". #}

{% block body %}
    {#  Display flash messages, which may include status alerts or notifications. 
        These are rendered as Bootstrap alerts. #}
    {% for label, messages in app.flashes %}
        <div class="alert alert-{{ label }}">
            {% for message in messages %}
                <p>{{ message }}</p>
            {% endfor %}
        </div>
    {% endfor %}

    <h1 class="text-center">Task index</h1>

    {# Table to display task data in a dark Bootstrap-styled table with hover effects. #}
    <table class="table table-dark table-hover">
        <thead>
            <tr class="text-center">
                <th class="text-start">
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'id', 'order': sortField == 'id' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'id' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        ID
                    </a>
                </th>
                <th class="text-start">
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'title', 'order': sortField == 'title' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'title' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        Title
                    </a>
                </th>
                <th class="text-start">Description</th>
                <th>
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'due_date', 'order': sortField == 'due_date' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'due_date' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        Due Date
                    </a>
                </th>
                <th>
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'is_completed', 'order': sortField == 'is_completed' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'is_completed' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        Is Completed
                    </a>
                </th>
                <th>
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'progress', 'order': sortField == 'progress' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'progress' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        Progress
                    </a>
                </th>
                <th>
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'createdAt', 'order': sortField == 'createdAt' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'createdAt' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        Created At
                    </a>
                </th>
                <th>
                    <a href="{{ path('app_task_index', app.request.query.all | merge({'sort': 'updatedAt', 'order': sortField == 'updatedAt' and sortOrder == 'asc' ? 'desc' : 'asc'})) }}"
                    class="sort-link {% if sortField == 'updatedAt' %}{{ sortOrder == 'asc' ? 'asc' : 'desc' }}{% endif %}">
                        Updated At
                    </a>
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {# Loop through the 'pagination' variable to display each task in a table row #}
        {% for task in pagination %}
            <tr class="text-center">
                {# Display individual task details like ID, title, description, etc. #}
                <td class="text-start">{{ task.id }}</td>
                <td class="text-start">{{ task.title }}</td>
                <td class="text-start">{{ task.description }}</td>
                <td>{{ task.dueDate ? task.dueDate|date('Y-m-d') : '' }}</td>
                <td>{{ task.isCompleted ? 'Yes' : 'No' }}</td>
                <td>
                    <div class="progress" style="height: 25px;" title="{{ task.progress }}%">
                        <div class="progress-bar bg-success" role="progressbar" style="width: {{ task.progress }}%;" aria-valuenow="{{ task.progress }}" aria-valuemin="0" aria-valuemax="100">
                            {{ task.progress }}%
                        </div>
                    </div>
                </td>
                <td>{{ task.createdAt ? task.createdAt|date('Y-m-d H:i:s') : '' }}</td>
                <td>{{ task.updatedAt ? task.updatedAt|date('Y-m-d H:i:s') : '' }}</td>
                <td>
                    {#  Display action buttons to show, edit. #}
                    <a class="btn btn-primary" href="{{ path('app_task_show', {'id': task.id}) }}">show</a>
                    <a class="btn btn-secondary" href="{{ path('app_task_edit', {'id': task.id}) }}">edit</a>
                </td>
            </tr>
        {% else %}
            {# If no tasks are found, display a row with a message saying no records are available. #}
            <tr>
                <td colspan="9"  class="text-center">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    {% if pagination.count > 10 %}
    <nav aria-label="Page navigation">
        <ul class="pagination">
            {% if pagination.hasPreviousPage() %}
                <!-- Show the "Previous" button if there is a previous page -->
                <li class="page-item">
                    <a class="page-link" href="{{ path('app_task_index', app.request.query.all | merge({'page': pagination.previousPage})) }}" aria-label="Précédent">
                        <span aria-hidden="true">&laquo; Previous</span> <!-- Left double arrow for "Previous" -->
                    </a>
                </li>
            {% endif %}

            <!-- Loop through all the pages -->
            {% for page in 1..pagination.nbPages %}
                <li class="page-item{% if page == pagination.currentPage %} active{% endif %}">
                    <!-- Highlight the current page by adding the 'active' class -->
                    <a class="page-link" href="{{ path('app_task_index', app.request.query.all | merge({'page': page})) }}">{{ page }}</a>
                </li>
            {% endfor %}

            {% if pagination.hasNextPage() %}
                <!-- Show the "Next" button if there is a next page -->
                <li class="page-item">
                    <a class="page-link" href="{{ path('app_task_index', app.request.query.all | merge({'page': pagination.nextPage})) }}" aria-label="Suivant">
                        <span aria-hidden="true">Next &raquo;</span> <!-- Right double arrow for "Next" -->
                    </a>
                </li>
            {% endif %}
        </ul>
    </nav>
    {% endif %}
{% endblock %}
