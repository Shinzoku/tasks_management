{% extends 'base.html.twig' %}
{# This template extends the base layout. #}

{% block title %}Edit Task{% endblock %}
{# Sets the page title to "Edit Task". #}

{% block body %}
    <div class=" d-flex flex-column vh-100 justify-content-center  align-items-center">
    {# Uses Bootstrap classes to center the content both vertically and horizontally. #}

        <div class="w-25 border border-1 border-dark p-5 rounded bg-secondary text-white">
        {# Creates a container with a width of 25%, border, padding, rounded corners, and a dark background. #}

            <h1 class="text-center">Edit Task</h1>
            {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
            {# Starts the form rendering and disables HTML5 validation. #}

            <div class="d-grid gap-3">
            {# Creates a grid layout with gaps between form fields. #}

                {% if is_granted('ROLE_ADMIN') %}   {# Displays the following fields if the user has the 'ROLE_ADMIN' role. #}
                    <div>
                        {{ form_label(form.title) }}
                        {{ form_errors(form.title) }}
                        {{ form_widget(form.title, { 'attr': {'value': task.title} }) }}
                        {# Displays the title field with its label, errors, and widget. #}
                    </div>
                    <div>
                        {{ form_label(form.description) }}
                        {{ form_errors(form.description) }}
                        {{ form_widget(form.description, { 'attr': {'value': task.description} }) }}
                        {# Displays the description field with its label, errors, and widget. #}
                    </div>
                    <div>
                        {{ form_label(form.due_date) }}
                        {{ form_widget(form.due_date, { 'attr': {'value': task.dueDate ? task.dueDate|date('Y-m-d') : ''} }) }}
                        {# Displays the due date field with its label and widget, formatted as 'Y-m-d' if a due date exists. #}
                    </div>
                    <div class="mb-3 position-relative">
                        {{ form_label(form.progress) }}
                        <div class="d-flex align-items-center">
                            {{ form_widget(form.progress, { 'attr': {'value': task.progress} }) }}
                            <span id="rangeValue" class="position-absolute border border-2 border-secondary rounded-3 pb-1 bg-white text-dark text-center">{{ form.vars.value.progress }} %</span>
                        </div>
                        {# Displays the progress field with its label, widget, and a dynamically updated percentage span. #}
                    </div>
                    <div class="mt-3">
                        {{ form_label(form.user) }} <span> Assigned </span>
                        {{ form_widget(form.user, { 'attr': {'value': task.user ? task.user.getFirstname() ~ ' ' ~ task.user.getLastname() : ''} }) }}
                        {# Displays the user field with its label and widget, showing the assigned user's name if available. #}
                    </div>
                {% elseif is_granted('ROLE_USER') %}    {# Displays the following fields if the user has the 'ROLE_USER' role. #}
                    <div class="d-none">
                        {{ form_widget(form.title, { 'attr': {'value': task.title} }) }}
                    </div>
                    <div>
                        <span>Title :</span>
                        <p>{{ task.title }}</p>
                        {# Displays the title as a static text if the user is not an admin. #}
                    </div>
                    <div class="d-none">
                        {{ form_widget(form.description, { 'attr': {'value': task.description} }) }}
                    </div>
                    <div>
                        <span>Description :</span>
                        <p>{{ task.description }}</p>
                        {# Displays the description as a static text if the user is not an admin. #}
                    </div>
                    <div class="d-none">
                        {{ form_label(form.due_date) }}
                        {{ form_widget(form.due_date, { 'attr': {'value': task.dueDate ? task.dueDate|date('Y-m-d') : ''} }) }}
                    </div>
                    <div class="mb-3 position-relative">
                        {{ form_label(form.progress) }}
                        <div class="d-flex align-items-center">
                            {{ form_widget(form.progress, { 'attr': {'value': task.progress} }) }}
                            <span id="rangeValue" class="position-absolute border border-2 border-secondary rounded-3 pb-1 bg-white text-dark text-center">{{ form.vars.value.progress }} %</span>
                        </div>
                        {# Displays the progress field with its label and widget, and a dynamically updated percentage span, even if the user is not an admin. #}
                    </div>
                    <div class="mt-3 d-none">
                        {{ form_label(form.user) }} <span> Assigned </span>
                        {{ form_widget(form.user, { 'attr': {'value': task.user ? task.user.getFirstname() ~ ' ' ~ task.user.getLastname() : ''} }) }}
                        {# Displays none, if the user is not an admin. #}
                    </div>
                    <div class="form-check form-switch">
                        {{ form_widget(form.chooseTask) }}
                        {{ form_label(form.chooseTask, null) }}
                        {# Displays a switch to choose the task, if the user is not an admin. #}
                    </div>
                {% endif %}
                <div class="d-flex justify-content-end">
                    {{ include('task/_form.html.twig', {'button_label': 'Update'}) }}
                    {# Includes a partial template for the form submit button labeled "Update". #}
                </div>
            </div>
            {{ form_end(form) }}    {# Ends the form rendering. #}
            <a class="btn btn-dark" href="{{ path('app_task_show_front', { 'id': task.id }) }}">back to task</a>
            {# Provides a link to return to the task view page with a dark button. #}
        </div>
    </div>
{% endblock %}